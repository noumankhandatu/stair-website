  const polylineData = [
    {
      points: "451,-16,-451,-16,-452,856.03,489,37,37",
      fill: "url(#turn1_tread1)",
      strokeWidth: 2,
      textContent: "#5",
      textPosition: { x: 70, y: -100 },
    },
    {
      points: "489,18.47,-451,847.5,-460,1488,-136.03,1488,454,55",
      fill: "url(#turn1_tread2)",
      strokeWidth: 2,
      textContent: "#6",
      textPosition: { x: 250, y: -280 },
    },
    {
      points: "415.4,55,-134.63,1488,457,1488,477,26,334,26",
      fill: "url(#turn1_tread3)",
      strokeWidth: 2,
      textContent: "#7",
      textPosition: { x: 550, y: -400 },
    },
  ];
   {/* risers */}
                <g>
                  <g transform="translate(-13 1600)  rotate(-0.3)">
                    <g transform="translate(0 0)  rotate(0)">
                      <polyline
                        points="451,-16,-451,-16,-452,856.03,489,37,37"
                        fill="url(#turn1_tread1)"
                        stroke="black"
                        strokeWidth={2}
                      />
                      <text
                        style={{ fontSize: "" }}
                        className="heavy"
                        textAnchor=""
                        transform="translate(0,400) rotate(0) scale(-1,1)"
                      />
                      <polyline
                        points="431,0,-431,0,-431,10,451,10"
                        fill="url(#turn1_tread1)"
                        stroke="black"
                        strokeWidth={1}
                      />
                      <text
                        style={{ fontSize: "" }}
                        className="heavy"
                        textAnchor=""
                        transform="translate(0,400) rotate(0) scale(-1,1)"
                      />
                      <text
                        x={70}
                        y={-100}
                        style={{
                          fontSize: 55,
                          fontFamily: "Arial, Helvetica, sans-serif",
                          color: "black",
                        }}
                        transform="translate (0,0) rotate(180) scale(-1,1)"
                      >
                        #5
                      </text>
                    </g>
                    <g transform="translate(0 0)  rotate(0)">
                      <polyline
                        points="489,18.47,-451,847.5,-460,1488,-136.03,1488,454,55"
                        fill="url(#turn1_tread2)"
                        stroke="black"
                        strokeWidth={2}
                      />
                      <text
                        style={{ fontSize: "" }}
                        className="heavy"
                        textAnchor=""
                        transform="translate(0,400) rotate(0) scale(-1,1)"
                      />
                      {/* <polyline
                        points="689,37,-731,866.03,-731,877.6,689,48.58"
                        fill="url(#turn1_tread2)"
                        stroke="black"
                        strokeWidth={1}
                      /> */}
                      <text
                        style={{ fontSize: "" }}
                        className="heavy"
                        textAnchor=""
                        transform="translate(0,400) rotate(0) scale(-1,1)"
                      />
                      <text
                        x={250}
                        y={-280}
                        style={{
                          fontSize: 55,
                          fontFamily: "Arial, Helvetica, sans-serif",
                          color: "black",
                        }}
                        transform="translate (0,0) rotate(180) scale(-1,1)"
                      >
                        #6
                      </text>
                    </g>
                    <g transform="translate(0 0)  rotate(0)">
                      <polyline
                        points="415.4,55,-134.63,1488,457,1488,477,26,334,26"
                        fill="url(#turn1_tread3)"
                        stroke="black"
                        strokeWidth={2}
                      />
                      <text
                        style={{ fontSize: "" }}
                        className="heavy"
                        textAnchor=""
                        transform="translate(0,400) rotate(0) scale(-1,1)"
                      />
                      <polyline
                        points="434,55,-116.03,1488,-104.4,1488,434.63,55"
                        fill="url(#turn1_tread3)"
                        stroke="black"
                        strokeWidth={1}
                      />
                      <text
                        style={{ fontSize: "" }}
                        className="heavy"
                        textAnchor=""
                        transform="translate(0,400) rotate(0) scale(-1,1)"
                      />
                      <text
                        x={550}
                        y={-400}
                        style={{
                          fontSize: 55,
                          fontFamily: "Arial, Helvetica, sans-serif",
                          color: "black",
                        }}
                        transform="translate (0,0) rotate(180) scale(-1,1)"
                      >
                        #7
                      </text>
                    </g>
                  </g>
                  {/* horizatinal stairs */}
                  {appState.svgRiser.positions.map((items, index) => {
                    return (
                      <g key={index} transform={`translate(-481 ${items})  rotate(0)`}>
                        <rect
                          x={0}
                          y={-16}
                          width={962}
                          height={appState.svgRiser.ceilingHeight}
                          fill={`url(#${appState.svgRiser.color})`}
                          style={{ stroke: "black", strokeWidth: 2 }}
                          id="run1_tread1"
                          className=""
                        />

                        <rect
                          x={0}
                          y={0}
                          width={962}
                          height={10}
                          fill="none"
                          style={{ stroke: "black", strokeWidth: 1 }}
                          id="run1_tread1"
                          className=""
                        />
                        <text
                          x={456}
                          y={-130}
                          style={{
                            fontSize: 55,
                            fontFamily: "Arial, Helvetica, sans-serif",
                            color: "black",
                          }}
                          transform="translate (0,0) rotate(180) scale(-1,1)"
                        >
                          #{index + 1}
                        </text>
                      </g>
                    );
                  })}
                </g>










                height wagira jo phele kiya tha 
                // const handleHeightChange = (newValue) => {
//   setAppState((prevState) => ({
//     ...prevState,
//     svgRiser: {
//       ...prevState.svgRiser,
//       height: newValue,
//     },
//   }));
// };

{
  /* height */
}
{
  /* <Appheading sx={{ mt: 2 }}>Floor Height</Appheading>
      <Select
        fullWidth
        sx={{ height: 40, mt: 1 }}
        value={appState.svgRiser.height}
        onChange={(e) => handleHeightChange(parseFloat(e.target.value))}
      >
        {[
          0.1940416047548291, 0.2140416047548291, 0.2340416047548291, 0.2540416047548291,
          0.2740416047548291, 0.2840416047548291, 0.3040416047548291, 0.3240416047548291,
        ].map((value, index) => (
          <MenuItem key={index} value={value.toString()}>
            {index} mm
          </MenuItem>
        ))}
      </Select> */
}

{
  /* <Appheading sx={{ mt: 2 }}>Hinges Height</Appheading>
      <Select
        fullWidth
        sx={{ height: 40, mt: 1 }}
        value={appState.svgRiser.leftRightPencilBorder}
        onChange={(e) => {
          const action = parseInt(e.target.value);
          if (!isNaN(action)) {
            // Check if the selected value is a number
            const updatedHeight = action;
            setAppState((prevState) => ({
              ...prevState,
              leftRightPencilBorder: {
                ...prevState.leftRightPencilBorder,
                height: updatedHeight,
              },
            }));
          }
        }}
      >
        <MenuItem value="" disabled>
          Select a height
        </MenuItem>
        <MenuItem value="1260">180</MenuItem>
        <MenuItem value="1460">254</MenuItem>
        <MenuItem value="1660">304</MenuItem>
        <MenuItem value="1760">324</MenuItem>
        <MenuItem value="1795">410</MenuItem>
      </Select> */
}
